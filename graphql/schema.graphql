scalar Date @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Date")
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")
scalar Upload @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Upload")

type Query {
    login (id:String! password:String!): LoginData
    student(id:String! @eq): Student! @find
    administrative(id:Int! @eq): Administrative @find
    teacher(id:Int! @eq): Teacher @find
    group(id:String! @eq): Group @find
    me: User @auth
}

type Mutation {
    createStudent(student: StudentInput! @spread): Student @create
    createAdministrative(administrative: AdministrativeInput! @spread): Administrative
    createTeacher(teacher: TeacherInput! @spread): Teacher
    createEmployeeCategory(name: String!): EmployeeCategory @create
    createQuestionCategory(category: QuestionCategoryInput! @spread): QuestionCategory @create
    createAdministrativeCategory(name: String!): AdministrativeCategory @create
    createGroup(group: GroupInput! @spread): Group @create
    createDegree(name: String!): Degree @create
}

#import unions.graphql
#import enums.graphql
#import inputs.graphql
#import types.graphql




